%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                         %
%         GAINS - Simple Kalman Filter - ASEN 4018        %
%                                                         %
%                                                         %
%                     Jason Popich                        %
%                                                         %
%                      10/11/2022                         %
%                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Set Environment
clear
clc

%% Analytical Data
t1 = 0;                     % Start time
t2 = 0.2;                   % End time
n = 10000;                  % Number of data points
dt = (t2-t1)/n;             % Time step
t = linspace(t1, t2, n);    % n times from t1 to t1

% Generate analytical truth data
[A,V,X] = IM_testdata(t);

%% Simple Kinematics
[V_k, X_k] = IM_kinematic(A, V, X, dt);

%% Kalman Filter
sigma_std = 13.892443989449804;
P_n_n = [1 0 0; 0 0.1];
state = KF_accel(A, sigma_std,  dt);

%% Plot Data
figure;
tiled = tiledlayout(3,1);
xlab = xlabel(tiled,{'Time','$\mathbf{s}$'},'interpreter', 'latex');

nexttile
hold on
ylabel({'Acceleration','$\mathbf{m/s^{2}}$'},'interpreter', 'latex');
plot(t,A)
yline(0)
hold off

nexttile
hold on
ylabel({'Velocity','$\mathbf{mm/s}$'},'interpreter', 'latex');
plot(t,V)
plot(t,state(2,:))
legend('Truth', 'KF')
% plot(t,V_k)
hold off

nexttile
hold on
ylabel({'Position','$\mathbf{\mu m}$'},'interpreter', 'latex');
plot(t,X)
plot(t,state(1,:))
legend('Truth', 'KF')
% plot(t,X_k)
hold off